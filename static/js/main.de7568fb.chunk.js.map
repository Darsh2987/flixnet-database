{"version":3,"sources":["apiRequests.js","components/Buttons.js","components/Header.js","components/Banner.js","components/DisplayGrid.js","no-image.png","App.js","reportWebVitals.js","index.js"],"names":["apiKey","baseURL","apiRequests","flixnetOriginals","trending","popularMovies","upcomingMovies","popularTV","actionMovies","comedyMovies","horrorMovies","romanceMovies","documentaries","Buttons","props","Category","e","categoryRequest","target","dataset","category","setUsersChoice","className","hideHamburgerIcon","onClick","data-category","tabIndex","Header","useState","setHideHamburgerIcon","showCrossIcon","setsShowCrossIcon","href","icon","faBars","faTimes","Banner","data","movie","randomData","Math","floor","random","length","backgroundImagePath","backdrop_path","truncate","str","n","substr","style","backgroundImage","title","name","overview","setVoteClass","vote_average","DisplayGrid","imageBaseUrl","map","item","poster_path","vote","id","App","setMovie","usersChoice","useEffect","a","axios","request","results","fetchData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de7568fb.chunk.js","sourcesContent":["// API KEY\r\nconst apiKey = \"f5a07de26f8d5c4478107c654093e6e1\";\r\n\r\n// Base URL of API requests\r\nconst baseURL = \"https://api.themoviedb.org/3\";\r\n\r\n// Object containing all API URL endpoints\r\nconst apiRequests = {\r\n  flixnetOriginals: `${baseURL}/discover/tv?api_key=${apiKey}&with_networks=213`,\r\n  trending: `${baseURL}/trending/all/week?api_key=${apiKey}&language=en-US`,\r\n  popularMovies: `${baseURL}/movie/popular?api_key=${apiKey}&language=en-US&page=1`,\r\n  upcomingMovies: `${baseURL}/movie/upcoming?api_key=${apiKey}&language=en-US&page=1`,\r\n  popularTV: `${baseURL}/tv/popular?api_key=${apiKey}&language=en-US&page=1`,\r\n  actionMovies: `${baseURL}/discover/movie?api_key=${apiKey}&with_genres=28`,\r\n  comedyMovies: `${baseURL}/discover/movie?api_key=${apiKey}&with_genres=35`,\r\n  horrorMovies: `${baseURL}/discover/movie?api_key=${apiKey}&with_genres=27`,\r\n  romanceMovies: `${baseURL}/discover/movie?api_key=${apiKey}&with_genres=10749`,\r\n  documentaries: `${baseURL}/discover/movie?api_key=${apiKey}&with_genres=99`,\r\n};\r\n\r\nexport default apiRequests;\r\n","import React from \"react\";\r\n\r\nconst Buttons = (props) => {\r\n  // Function to handle all category buttons\r\n  function Category(e) {\r\n    const target = e.target.dataset.category;\r\n    const categoryRequest = target;\r\n    props.setUsersChoice(categoryRequest);\r\n  }\r\n\r\n  return (\r\n    <ul className={`categories ${props.hideHamburgerIcon ? \"nav-overlay--visible\" : \"\"}`}>\r\n      {\" \"}\r\n      <li className=\"categories__button btn\" onClick={Category} data-category=\"flixnetOriginals\" tabIndex=\"1\">\r\n        Flixnet Originals\r\n      </li>\r\n      <li className=\"categories__button btn\" onClick={Category} data-category=\"trending\" tabIndex=\"1\">\r\n        Trending\r\n      </li>\r\n      <li className=\"categories__button categories__button-movies\">\r\n        Movies\r\n        <ul>\r\n          <li className=\"categories__button btn\" onClick={Category} data-category=\"popularMovies\" tabIndex=\"1\">\r\n            Popular Movies\r\n          </li>\r\n          <li className=\"categories__button btn\" onClick={Category} data-category=\"upcomingMovies\" tabIndex=\"1\">\r\n            Upcoming Movies\r\n          </li>\r\n          <li className=\"categories__button btn\" onClick={Category} data-category=\"actionMovies\" tabIndex=\"1\">\r\n            Action Movies\r\n          </li>\r\n          <li className=\"categories__button btn\" onClick={Category} data-category=\"comedyMovies\" tabIndex=\"1\">\r\n            Comedy Movies\r\n          </li>\r\n          <li className=\"categories__button btn\" onClick={Category} data-category=\"horrorMovies\" tabIndex=\"1\">\r\n            Horror Movies\r\n          </li>\r\n          <li className=\"categories__button btn\" onClick={Category} data-category=\"romanceMovies\" tabIndex=\"1\">\r\n            Romance Movies\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li className=\"categories__button btn\" onClick={Category} data-category=\"popularTV\" tabIndex=\"1\">\r\n        Popular TV\r\n      </li>\r\n      <li className=\"categories__button btn\" onClick={Category} data-category=\"documentaries\" tabIndex=\"1\">\r\n        Documentaries\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React, { useState } from \"react\";\r\nimport Buttons from \"./Buttons\";\r\n\r\nconst Header = (props) => {\r\n  const [hideHamburgerIcon, setHideHamburgerIcon] = useState(\"\");\r\n  const [showCrossIcon, setsShowCrossIcon] = useState(\"\");\r\n\r\n  // Function click event to hide hamburger icon and show cross icon\r\n  const showMobileNav = () => {\r\n    setHideHamburgerIcon(true);\r\n    setsShowCrossIcon(true);\r\n  };\r\n\r\n  // Function click event to show hamburger icon and hide cross icon\r\n  function closeNav() {\r\n    setHideHamburgerIcon(false);\r\n    setsShowCrossIcon(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__inner\">\r\n        <h1 className=\"header__logo\">\r\n          <a href=\"./\">Flixnet DB</a>\r\n        </h1>\r\n        <Buttons setUsersChoice={props.setUsersChoice} hideHamburgerIcon={hideHamburgerIcon} />\r\n        <FontAwesomeIcon icon={faBars} onClick={showMobileNav} className={hideHamburgerIcon ? \"fa-bars--invisible\" : \"\"} />\r\n        <FontAwesomeIcon icon={faTimes} onClick={closeNav} className={showCrossIcon ? \"fa-times--visible\" : \"\"} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\n\r\nconst Banner = (props) => {\r\n  // variable to store movie array of objects passed in from the movie state\r\n  const data = props.movie;\r\n\r\n  // Select a random object/movie from the \"data\" array\r\n  const randomData = data[Math.floor(Math.random() * data.length - 1)];\r\n\r\n  // Image path of the random selected object from the \"data\" array\r\n  const backgroundImagePath = \"https://image.tmdb.org/t/p/original\" + randomData?.backdrop_path;\r\n\r\n  // Truncate function to show only a specified amout of letter\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundImage: `url(${backgroundImagePath})`,\r\n      }}\r\n    >\r\n      <Header setUsersChoice={props.setUsersChoice} />\r\n      <div className=\"banner__contents\">\r\n        <div className=\"banner__contents-description\">\r\n          <h1 className=\"banner__contents-title\">{truncate(randomData?.title, 20) || truncate(randomData?.name, 20)}</h1>\r\n          <p className=\"banner__contents-overview\">{truncate(randomData?.overview, 150)}</p>\r\n          <p className={`banner__contents-vote ${props.setVoteClass(randomData?.vote_average)}`}>{randomData?.vote_average}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"banner--bottomfade\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport noImage from \"../no-image.png\";\r\n\r\nconst DisplayGrid = (props) => {\r\n  const imageBaseUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\n  // Function/conditional statment to apply a specific class name depending on the vote average value\r\n  function setVoteClass(vote) {\r\n    if (vote >= 8) {\r\n      return \"grid__item-vote--green\";\r\n    } else if (vote >= 5) {\r\n      return \"grid__item-vote--orange\";\r\n    } else {\r\n      return \"grid__item-vote--red\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      {props.movie.map((item) => (\r\n        <div\r\n          className=\"grid__item\"\r\n          key={item.id}\r\n          style={{\r\n            backgroundImage: `url(${imageBaseUrl + item?.poster_path ? imageBaseUrl + item?.poster_path : noImage})`,\r\n          }}\r\n        >\r\n          <div className=\"grid__item-inner\">\r\n            <div className=\"grid__item-description\">\r\n              <h1 className=\"grid__item-title\">{item?.title || item?.name}</h1>\r\n              <p className=\"grid__item-overview\">{item?.overview}</p>\r\n              <p className={`grid__item-vote ${setVoteClass(item.vote_average)}`}>{item?.vote_average}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayGrid;\r\n","export default __webpack_public_path__ + \"static/media/no-image.e880635b.png\";","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.scss\";\nimport apiRequests from \"./apiRequests\";\nimport Banner from \"./components/Banner\";\nimport DisplayGrid from \"./components/DisplayGrid\";\nimport Buttons from \"./components/Buttons\";\n\nfunction App() {\n  const [movie, setMovie] = useState([]);\n  const [usersChoice, setUsersChoice] = useState(\"popularMovies\"); // On the first initial load use popular movies data in this state\n\n  // Fetch data from API\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios(apiRequests[usersChoice]);\n      setMovie(request.data.results);\n    }\n\n    fetchData();\n  }, [usersChoice]);\n\n  // Function/conditional statment to apply a specific class name depending on the vote average value\n  function setVoteClass(vote) {\n    if (vote >= 8) {\n      return \"grid__item-vote--green\";\n    } else if (vote >= 5) {\n      return \"grid__item-vote--orange\";\n    } else {\n      return \"grid__item-vote--red\";\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Banner movie={movie} setUsersChoice={setUsersChoice} setVoteClass={setVoteClass} />\n      <DisplayGrid movie={movie} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}